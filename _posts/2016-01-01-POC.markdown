---
title: Point of Contact
layout: post
date: 2016-01-01 22:48
image: /assets/images/markdown.jpg
headerImage: false
tag:
- Single point of failure
- Knowledge sharing
- Context switching
- Empowerment
category: blog
author: Yogendra Valani
description: Do you have knowledge silos on your team, are you developers interrupted from their work... find out why assigning a POC may help you.
# jemoji: '<img class="emoji" title=":ramen:" alt=":ramen:" src="https://assets.github.com/images/icons/emoji/unicode/1f35c.png" height="20" width="20" align="absmiddle">'
---

## Knowledge Silos
During my time working at Gorkana, I worked on several teams and they all shared a common problem. Many senior developers spent a lot of time
troubleshooting applications for which they had most domain knowledge. This was fine in the short run as problems got solved very quickly,
but when they were on their annual holidays or left the company, this put a strain on the rest of the team to fix issues. We would lose momentum
on our current task and be stressed trying to fix bugs in application we had no previous exposure to. It wasn't much fun for the senior devs either, as they spent most of their time bug fixing.

## Point Of Contact
At 7digital a member of each team is assigned as a Point of Contact (POC). This responsibility is rotated either daily, weekly or by the task being worked on. It is POC's responsibility to answer any queries and solve issues (or at least decide to ask others in the team).

## What are the benefits:

+ __Reduces context switching__ - It has been said that when a pair of developers are interrupted 15 minutes it can take an hour to get back on track. Having a POC means only one person is disturbed and other team members can focus on their tasks.

+ __Knowledge sharing__ - it helps reduce knowledge silos within the team.

+ __Equal responsibility__ - if you are a junior or senior developer, have been working at the company for years or a new starter. You are responsible for the team's software.

+ __Empowerment__ - being approached and asked questions does give you the feeling of importance within the team and company.

## Do's and Don't

* Do make it easy for anyone outside the team to identify who POC is on your team. At 7digital teams have either sign on their Kanban board or a sign hanging above the POC's desk.

* Do ask for help when you don't know the answer to a question.

* Don't bullshit. If you don't know something, just be honest and say you don't know. Ask other team members, while this may mean disturbing other developers on the team, it ensures knowledge is shared.

* Don't just redirect someone to someone else. Take them to the team member and make sure the query has been answered. Who knows you may get the same question again.

* Do respect POC, having a POC requires team discipline. If you do start having a POC, people will be used to asking the same person questions. If a question comes to you and you are not POC, redirect them to the POC. Even if you know the answer to the question, redirect them. This ensures knowledge is shared, and in future you do not get disturbed.

<a href="https://twitter.com/DrValani" class="twitter-follow-button" data-show-count="false">Follow @DrValani</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
